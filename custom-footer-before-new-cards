<script>
var curQ = 0
var locked = false
var answeredResults = []
var savedAnswered= []

var partners = [
	{
             name: 'PolicyGenius',
             id: 'policygenius-table',
             num: 1,
             filters: [
              ["5000", "10000", "15000", "20000", "25000"], ["1","5","10"],[], ["1","5","6"]
             ]
	},
	  {
             name: 'Dayforward',
             id: 'dayforward-table',
             num: 1,
             filters: [
              [], ["Myself"],[], []
             ]
	},
	
	{
             name: 'EveryDayLife',
             id: 'everydaylife-table',
             num: 2,
             filters: [
              ["5000", "10000", "15000", "20000", "25000"], ["1","5","10"],[], ["1","5","6"]
             ]
	},

	{
             name: 'Ladder',
             id: 'ladder-table',
             num: 2,
             filters: [
             	[], [], [], []
             ],
             geoFilters: ["NY"]
	},

        {
             name: 'Fidelity',
             id: 'fidelity-table',
             num: 4,
             filters: [
              ["5000", "10000", "15000", "20000"], [],[], ["1","6"]
             ],
             geoFilters: []
	},
     

        {
             name: 'JRC',
             id: 'jrc-table',
             num: 5,
             filters: [
              [], [],[], ["1","2","3","4"]
             ],
             geoFilters: ["TX"]
	},

	{
             name: 'Lemonade',
             id: 'lemonade-table',
             num: 3,
             filters: [
              ["5000", "10000", "15000", "20000", "25000","1000000","2000000","3000000","4000000","5000000","6000000","7000000","8000000","9000000","10000000"], ["1","5"],[], ["1","5","6"]
             ]
	},
]



 var questions = [
      {
        "question": "Of the following options, which of these do you want to trade?",
        "selection": true,
        "answers": [
            "Cryptocurrency",
            "Stocks",
            "Options",
            "Mutual funds",
            "ETF's",
            "Bonds",
        ],
        "answersValue": [
            "Cryptocurrency",
            "Stocks",
            "Options",
            "Mutual funds",
            "ETF's",
            "Bonds"
        ],
        "name": "options"
      },

  {
        "question": "Will you manage your trades on your own or do you want your broker to do it?",
        "answers": [
            "I'll manage my trades",
            "Let broker manage trades",
        ],
        "answersValue": [
            "Myself",
            "Broker"
        ],
        "name": "broker manager"
      },

     {
        "question": "How long have you been Investing?",
        "answers": [
            "Less than a year",
            "1-3 years",
            "Longer than 3 years",
        ],
        "answersValue": [
            "Less than a year",
            "1-3 years",
            "Longer than 3 years"
        ],
        "name": "time investing"
      },



  {
        "question": "What is your primary goal with investing?",
        "answers": [
            "Save for retirement",
            "Trade and profit now",
            "College saving",
            "Other",
        ],
        "answersValue": [
            "Save for retirement",
            "Trade and profit now",
            "College saving",
            "Other",
        ],
        "name": "primary goal"
      },

  {
        "question": "What is most important for you in a broker?",
        "answers": [
            "No fee trading",
            "Detailed data",
            "An easy to use platform",
            "Choice of investment types",
        ],
        "answersValue": [
            "No fee trading",
            "Detailed data",
            "An easy to use platform",
            "Choice of investment types",
        ],
        "name": "broker feature"
      },
  ]
  
  var questionCount = 0;


 
  var questionCount = 0;


  function answer(obj) {
    if (!locked) {
      locked = true
      questionCount = questionCount + 1;
      var num = obj.getAttribute("data-storedValue");
      answeredResults[ questions[curQ]["name"]] = num;
      savedAnswered[questions[curQ]["name"]] = questionCount;
    
      document.getElementById("question-field").style.opacity= "0";  
    
      ga('send', {
        hitType: 'event',
        eventCategory: 'test',
        eventAction: questions[curQ]["name"],
        eventLabel: answeredResults[ questions[curQ]["name"] ],
      });
    
      curQ = curQ + 1
 
      if (curQ < questions.length ) {
        setTimeout(function() {
          updateForm()
        }, 200)
      } else {
        document.getElementById("question-field").style.display= "none";  
      
        updateResults()
      }
    }
  }
  
  function answerSelection() {
    if (!locked) {
      locked = true;
      var inputElements = document.getElementById('checkb').getElementsByTagName('input');

      for (var i = 0; i < inputElements.length; i++) {
        if (inputElements[i].name !== "button") {
          questionCount = questionCount + 1;
          if (inputElements[i].checked === true) {
            
            answeredResults[inputElements[i].value] = inputElements[i].checked;
            savedAnswered[inputElements[i].value] = questionCount;
            document.getElementById("question-field").style.opacity= "0"; 

            ga('send', {
              hitType: 'event',
              eventCategory: 'test',
              eventAction: questions[curQ]["name"],
              eventLabel: inputElements[i].value,
            });
          }
        }
      }

      curQ = curQ + 1
      if (curQ < questions.length ) {
        setTimeout(function() {
          updateForm()
        }, 200)
      } else {
        document.getElementById("question-field").style.display= "none";  
        updateResults();
      }
    }
  }


  function updateForm() {
      
    var finisher = "";
    var buttonText = "Continue";
    if (curQ == questions.length - 1) {
      finisher = "Last question.";
      var buttonText = "Continue";
    } else if (curQ != 0) {
      finisher = "You're almost there!";
    } else {
      finisher = "These questions help us give you better results.";
    }

    if (questions[curQ]["selection"] === true) {

      document.getElementById('question-title').innerHTML = questions[curQ]["question"];
      var htmlString = "";
      
      htmlCheckboxString = "";

      for (i = 0; i < questions[curQ]["answers"].length; i++) {
        htmlCheckboxString += `<div class="luna-toggle" style="margin: 1em 0">
          <input class="luna-toggle__input" type="checkbox" data-storedValue="${questions[curQ]["answersValue"][i]}" id="answer-${i}" name="${questions[curQ]["answers"][i]}" value="${questions[curQ]["answersValue"][i]}">
          <label class="luna-label luna-toggle__label" for="answer-${i}"></label>
          <span class="luna-toggle__text" for="answer-${i}">${questions[curQ]["answers"][i]}</span>
          </div>`;
      }

      htmlString = `
          <div id="checkb">${htmlCheckboxString}</div>
          <button class="luna-button luna-button--primary luna-button--ghost luna-button--fluid" style="color: #0677da" onclick="answerSelection(this)" name="button">${buttonText}</button>
        `;

    } else {
      document.getElementById('question-title').innerHTML = questions[curQ]["question"];
      var htmlString = "<ul id='answer-items'>";

      for (a = 0; a < questions[ curQ ]["answers"].length; a++) {
          var customVal = a;
          htmlString = htmlString + '<li id="answer-' + a + '" data-storedValue="' + questions[ curQ ][ "answersValue" ][ a ] + '" onclick="answer(this)">' + questions[ curQ ]["answers"][a] + '</li>';
      }
  
      htmlString = htmlString + "</ul>";
    }



    document.getElementById('question-answers').innerHTML = htmlString;
    document.getElementById("question-field").style.opacity= "1";
    document.getElementById("sub-header").innerHTML = "Question " + (curQ+1) + " of " + questions.length + ". " + finisher;

    locked = false
  }
  
  function requestZipCode() {
    document.getElementById('question-title').innerHTML = "What is your zip code?"
       
      var htmlString = "<ul id='answer-items'>"
  
      document.getElementById('question-answers').innerHTML = '<input id="zip" name="zip" class="luna-input ma-right mobile-header-cta" style="text-align: center; padding: 20px;" type="text" placeholder="Enter your ZIP code" />'
      document.getElementById("question-field").style.opacity= "1";
      document.getElementById("sub-header").innerHTML = "These questions help us give you better results."
  
      locked = false
  }
  
  if (zipcode == "") {
    console.log("Empty zip code")
  
    updateForm()
  } else {
    updateForm()
  }
  
   ga('send', {
      hitType: 'event',
    eventCategory: 'test',
      eventAction: "Loaded",
      eventLabel: deviceType,
    });
  </script>
  
  <script type="application/javascript">(function(w,d,t,r,u){w[u]=w[u]||[];w[u].push({'projectId':'10000','properties':{'pixelId':'10100838'}});var s=d.createElement(t);s.src=r;s.async=true;s.onload=s.onreadystatechange=function(){var y,rs=this.readyState,c=w[u];if(rs&&rs!="complete"&&rs!="loaded"){return}try{y=YAHOO.ywa.I13N.fireBeacon;w[u]=[];w[u].push=function(p){y([p])};y(c)}catch(e){}};var scr=d.getElementsByTagName(t)[0],par=scr.parentNode;par.insertBefore(s,scr)})(window,document,"script","https://s.yimg.com/wi/ytc.js","dotq");</script>
  <script type="application/javascript">
    window.dotq = window.dotq || [];
    window.dotq.push(
    {
      'projectId': '10000',
      'properties': {
        'pixelId': '10100838',
        'qstrings': {
          'et': 'custom',
          'ec': 'getquote'
     }
    } } );
 </script>
